<?php

/**
 * @file
 * Manage robots.txt through Backdrop.
 */

/**
 * Implements hook_config_info();
 */
function robotstxt_config_info() {
  $prefixes = array();
  $prefixes['robotstxt.settings'] = array(
    'group' => t('Configuration'),
    'label' => t('RobotsTxt settings'),
  );
  return $prefixes;
}

/**
 * Implements hook_permission().
 */
function robotstxt_permission() {
  return array(
    'administer robots.txt' => array(
      'title' => t('Administer robots.txt'),
      'description' => t('Perform maintenance tasks for robots.txt.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function robotstxt_menu() {
  $items['robots.txt'] = array(
    'page callback' => 'robotstxt_robots',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/search/robotstxt'] = array(
    'title' => 'RobotsTxt',
    'description' => 'Manage your robots.txt file.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('robotstxt_admin_settings'),
    'access arguments' => array('administer robots.txt'),
    'file' => 'robotstxt.admin.inc',
  );

  return $items;
}

/**
 * Show the robots.txt file.
 */
function robotstxt_robots() {
  watchdog('robotstxt', 'robots.txt requested by ' . getenv('HTTP_USER_AGENT'), NULL, WATCHDOG_DEBUG);

  $content = array();
  $content[] = config_get('robotstxt.settings', 'robotstxt');

  // Hook other modules for adding additional lines.
  if ($additions = module_invoke_all('robotstxt')) {
    $content = array_merge($content, $additions);
  }

  // Trim any extra whitespace and filter out empty strings.
  $content = array_map('trim', $content);
  $content = array_filter($content);

  backdrop_add_http_header('Content-type', 'text/plain');
  echo implode("\n", $content);
  backdrop_page_footer();
  exit;
}
